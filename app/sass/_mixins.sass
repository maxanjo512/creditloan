// width
=m($width)
  @media only screen and (max-width: $width+ "px")
    @content
=mm($width)
  @media only screen and (min-width: $width+ "px")
    @content
// height
=mh($height)
  @media only screen and (max-height: $height + "px")
    @content
=mmh($height)
  @media only screen and (min-height: $height + "px")
    @content
=parallax
  background-position: center
  background-attachment: fixed

// Обрезание текста с 3 точиями
=text-overflow
  overflow: hidden
  -ms-text-overflow: ellipsis
  text-overflow: ellipsis
  white-space: nowrap

=ie
  *display: inline
  *zoom: 1

%pseudo
  position: relative
  &:before,&:after
    content: ' '
    position: absolute
    top: 0
    left: 0
    
=pseudo
  @extend %pseudo

=coverdiv
  position: absolute
  top: 0
  left: 0
  width: 100%
  height: 100%

=overlay($color, $opacity)
  position: relative
  z-index: 10
  &::after
    position: absolute
    content: ""
    height: 100%
    width: 100%
    left: 0
    top: 0
    z-index: -10
    background: $color
    opacity: $opacity

=cover
  background-repeat: no-repeat
  -webkit-background-size: cover
  -moz-background-size: cover
  -o-background-size: cover
  background-size: cover
  background-position: 50% 50%

=size($width: 100%, $height: 100%)
  -moz-background-size: $width $height
  -webkit-background-size: $width $height
  background-size: $width $height

// retina, also available as +hdpi
=retina
  @media only screen and (-webkit-min-device-pixel-ratio: 2), only screen and (min-device-pixel-ratio: 2)
    @content

=box
  box-sizing: border-box

// Центрирование блока по горизонтали и по вертикали
=vcenter
  display: table-cell
  vertical-align: middle

// simple gradient
=g($color1, $color2)
  +background-image(linear-gradient($color1, $color2))

=gh($color1, $color2)
  +background-image(linear-gradient(left, $color1, $color2))

// font-family
=font($alias, $name)
  @font-face
    font-family: $alias
    src: url("../fonts/" + $name + ".ttf")
    font-weight: normal
    font-style: normal


// ROTATE
=rotate($deg: 0, $m11: 0, $m12: 0, $m21: 0, $m22: 0)
  -moz-transform: rotate($deg + deg)
  -o-transform: rotate($deg + deg)
  -webkit-transform: rotate($deg + deg)
  -ms-transform: rotate($deg + deg)
  transform: rotate($deg + deg)
  filter: progid:DXImageTransform.Microsoft.Matrix(M11=$m11, M12=$m12,M21=$m21, M22=$m22, sizingMethod='auto expand')
  zoom: 1

=justify
  text-align: justify
  line-height: 0
  font-size: 0
  text-justify: newspaper
  zoom: 1
  text-align-last: justify
  &:after
    content: ""
    display: inline-block
    width: 100%
    height: 0px
    visibility: hidden
    overflow: hidden
=vertical
  text-align: center
  font-size: 0
  &:before
    content: ""
    display: inline-block
    vertical-align: middle
    width: 0
    height: 100%

=clr
  &:after
    content: " "
    display: table
    clear: both
  *zoom: 1

=placeholder-color($color)
  &:-moz-placeholder,
  &::-moz-placeholder
    color: $color
    opacity: 1
  &::-webkit-input-placeholder
    color: $color

=placeholder
  &:-ms-input-placeholder
    @content
  &:-moz-placeholder
    @content
  &::-moz-placeholder
    @content
  &::-webkit-input-placeholder
    @content
  &::placeholder
    @content

=unselectable
  -webkit-touch-callout: none
  -webkit-user-select: none
  -khtml-user-select: none
  -moz-user-select: none
  -ms-user-select: none
  user-select: none

=nosel
  +unselectable

=prevent-text
  -ms-word-break: break-all
  word-break: break-all
  word-break: break-word
  -webkit-hyphens: auto
  -moz-hyphens: auto
  hyphens: auto

=font-smoothing($val: antialiased)
  -webkit-font-smoothing: $val
  -moz-font-smoothing: $val
  -ms-font-smoothing: $val
  -o-font-smoothing: $val


=scrollbar
  &::-webkit-scrollbar
    @content

=scrollbar-track
  &::-webkit-scrollbar-track
    @content

=scrollbar-thumb
  &::-webkit-scrollbar-thumb
    @content

=scrollbar-track-piece
  &::-webkit-scrollbar-track-piece
    @content

//triangle
=tr($width, $height, $bg, $direction)
  width: 0px
  height: 0px
  border-style: solid
  @if $direction == t
    border-width: 0 $width / 2 + px $height + px $width / 2 + px
    border-color: transparent transparent $bg transparent
  @if $direction == r
    border-width: $height / 2 + px 0 $height / 2 + px $width + px
    border-color: transparent transparent transparent $bg
  @if $direction == b
    border-width: $height + px $width / 2 + px 0 $width / 2 + px
    border-color: $bg transparent transparent transparent
  @if $direction == l
    border-width: $height / 2 + px $width + px $height / 2 + px 0
    border-color: transparent $bg transparent transparent
  @if $direction == tl
    border-width: $height + px $width + px 0 0
    border-color: $bg transparent transparent transparent
  @if $direction == tr
    border-width: 0 $width + px $height + px 0
    border-color: transparent $bg transparent transparent
  @if $direction == br
    border-width: 0 0 $height + px $width + px
    border-color: transparent transparent $bg transparent
  @if $direction == bl
    border-width: $height + px 0 0 $width + px
    border-color: transparent transparent transparent $bg
// example
// +arr(500,50, #000, l)
// +arr(500,50, #000, bl)

=rotate($var)
  -ms-transform: rotate($var+deg)
  -webkit-transform: rotate($var+deg)
  transform: rotate($var+deg)

=blur($var)
  -webkit-filter: blur($var)
  filter: blur($var)
  
=scale($var)
  -ms-transform: scale($var)
  -webkit-transform: scale($var)
  transform: scale($var)

=counter($var)
  counter-reset: $var
  > li, > dt
    &:before
      content: counter($var)
      counter-increment: $var

=br($radius) 
  -webkit-border-radius: $radius
  -moz-border-radius: $radius 
  -ms-border-radius: $radius
  border-radius: $radius
  
=bs($bshadow)
  -webkit-box-shadow: $bshadow
  -moz-box-shadow: $bshadow
  -ms-box-shadow: $bshadow
  -o-box-shadow: $bshadow
  box-shadow: $bshadow

=ts($string) 
  -webkit-text-shadow: $string
  -moz-text-shadow: $string
  -ms-text-shadow: $string
  -o-text-shadow: $string
  text-shadow: $string

=links($link, $visit, $hover, $active)
  a
    color: $link
    &:visited
      color: $visit
    &:hover
      color: $hover
    &:active
      color: $active
      
=opacity($trans)
  -moz-opacity: $trans
  -khtml-opacity: $trans
  opacity: $trans
  filter: alpha(opactiy=($trans * 100))
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=#{$trans * 100})"

// IMAGES
=png($name)
  background: url("../img/#{$name}.png") no-repeat
  //background-image: inline-image("#{$name}.png",'image/png')
=jpg($name)
  background: url("../img/#{$name}.jpg") no-repeat
  //background-image: inline-image("#{$name}.jpg",'image/jpg')

=float-fix($width)
  +m($width)
    display: flex!important
    flex-direction: column-reverse!important

// LOADER
=loader
  min-height: 50px
  background:  #fff url(../img/loader.gif) center center no-repeat
  height: 100%
  width: 100%
  position: fixed
  top: 0
  left: 0
  z-index: 2000

//Icon
=icon($size)
  height: $size
  width: $size
  padding: 10px
  background: #141414
  position: relative
  box-sizing: content-box
  display: inline-block
  &::after
    content: ""
    +absolute
    left: 50%
    margin-left: -($size / 2)
    top: 50%
    margin-top: -($size / 2)

  // Mine
=uppercase
  text-transform: uppercase
=capitalize
  text-transform: capitalize
=hidden
  visibility: hidden
=visible
  visibility: visible
=italic
  font-style: italic
=absolute
  position: absolute
=pointer
  cursor: pointer
=no-decor
  text-decoration: none
=normal
  line-height: normal
=content
  box-sizing: content-box
